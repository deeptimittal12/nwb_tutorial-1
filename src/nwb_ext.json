---
ICASeries:
  description: |
    Represents a factored form of some TimeSeries. This class is useful for representing the outputs of matrix decomposition transformations like sparse coding or independent component analysis.
  merge: ["<TimeSeries>"]
  attributes:



# "<ICASeries>": {
#         "description": (
#             "Abstract features, such as quantitative descriptions of sensory "
#             "stimuli. The TimeSeries::data field is a 2D array, storing those features (e.g., "
#             "for visual grating stimulus this might be orientation, spatial frequency and "
#             "contrast). Null stimuli (eg, uniform gray) can be marked as being an independent "
#             "feature (eg, 1.0 for gray, 0.0 for actual stimulus) or by storing NaNs for "
#             "feature values, or through use of the TimeSeries::control fields. A set of "
#             "features is considered to persist until the next set of features is defined. "
#             "The final set of features stored should be the null set."),
#         "merge": ["<TimeSeries>/"],
#         "attributes": {
#             "ancestry": {"data_type": "text",
#                 "dimensions": ["2"],
#                 "value":["TimeSeries","AbstractFeatureSeries"],
#                 "const": True},
#             "help?": {
#                 "data_type": "text",
#                 "value": ("Features of an applied stimulus. This is useful when storing the raw "
#                     "stimulus is impractical"),
#                 "const": True}},
#         "features": {
#             "description": "Description of the features represented in TimeSeries::data.",
#             "dimensions": ["num_features"],
#             "data_type": "text"},
#         "feature_units^": {
#             "description": "Units of each feature.",
#             "dimensions": ["num_features"],
#             "data_type": "text"},
#         "data": {
#             "description": "Values of each feature at each time.", 
#             "dimensions": ["num_times", "num_features"],
#             "data_type": "float32",
#             "attributes": { "unit": {
#                 "value": "see 'feature_units'"}}},
#     },
